<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>oneGet</title>
    <link
      href="//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css"
      rel="stylesheet"
      id="bootstrap-css"
    />
    <link
      href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css"
      rel="stylesheet"
    />
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <style>
      body{
        background-image: url(/images/게시판배경화면.jpg);
        background-size: cover;
      }
      .container {
        width: 90%;
        margin: 0 auto;
        height: 100%;
        background-color: rgba(240, 241, 247, 0.911);
      }
      .aTag{
        color: white;
        text-decoration-line: none;
      }
      .aTag:hover{
        color: white;
        text-decoration-line: none;
      }
      #C_T{
        height: 400px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div>
        <!-- the actual blog post: title/author/date/content -->
        <h1><a href=""></a></h1>
        <p class="lead">
          <% for(let i = 0 ; i < list.length ; i++) { %>
            <p class="lead"><%=list[i].title%></p>
            <p class="lead" style="font-size: 15px;"><%=list[i].ydata%></p>
            <i class="fa fa-user"> by <a href=""><%=list[i].userid%></a></i>
          </p>
          <hr />
          <div id="C_T">
            <br />
            <p style="word-wrap: break-word; white-space: pre-wrap;"><%=list[i].content%></p>
          </div>
          <% } %>
            <div style="margin:10px;">
              <% if(islogin) { %>
                <% if(userid == list[0].userid) {%>
            <button
              type="button"
              id="updateBtn"
              name="updateBtn"
              class="btn btn-primary backBtn"
              onclick="location.href='/border/borderPut/<%=list[0].no%>'">
              게시글 수정
            </button>
            <button
              type="button"
              id="deleteBtn"
              name="deleteBtn"
              class="btn btn-primary backBtn">
              게시글 삭제
            </button>
                <%}%>
              <%}%>
          </div>
          <div class="well">
            <h4><i class="fa fa-comment"></i> 전체 댓글</h4>
            <form role="form">
              <div class="form-group">
                <% if(islogin){ %>
                <input class="form-control" id="bc_id" name="ID" type="text" value="<%=userid%>" readonly>
                <% } %>
                <textarea class="form-control" id="bc_content" name="content" rows="3"></textarea>
              </div>
              <div>
                <table class="table table-striped">
                  <thead>
                    <tr>
                      <th>댓글번호</th>
                      <th>ID</th>
                      <th>내용</th>
                      <th>작성시간</th>
                      <th> </th>
                      <th> </th>
                    </tr>
                  </thead>
                  <tbody id="divcomment">
                  </tbody>
                </table>
              </div>
              <button type="button"
                class="btn btn-primary" id="saveBtn">
                <a class="aTag">
                  댓글등록
                </a>
              </button>
              <button
                class="btn btn-primary backBtn">
                <a href="#" class="aTag" onclick="location.href='/border'">
                  뒤로가기
                </a>
              </button>
            </form>
          </div>
      </div>
    </div>
    <script>
      const bo_id = `<%=bo_id%>`;
      const url = `/border/comment`;
      const userid = `<%=userid%>`;
      commentAll(); //댓글 전체조회
      commentUpdate(); //댓글 수정
      commentInsert(); //댓글 등록
      commentDelete(); //댓글 삭제
      viewsUpdate(); //조회수 증가

      //게시글 삭제
      deleteBtn.addEventListener("click",()=>{
        const no = "<%=list[0].no%>"
        fetch(`/border/borderLook/${no}`,{method : "delete"})
          .then((res)=>{
            alert("삭제가 완료되었습니다")
          })
          .then(()=> location.href='/border');
      })

      //조회수 증가
      function viewsUpdate(){
        fetch(`/border/borderLook/${bo_id}`,
              {method : "POST"})
          .then((res) => res.json())
      }
      
      // 댓글 전체조회
      function commentAll(){
        fetch(`${url}/${bo_id}`)
        .then((res)=>res.json())
        .then((res)=>{
          divcomment.innerHTML = '';
          //게스트일땐 댓글 삭제 버튼이 안보임
          for(let i = 0 ; i < res.length ; i++){
            let del = '';
            let update = '';
            if(userid == res[i].bc_id) {
              update = `<button type="button" id="updatebtn">수정</button>`
              del = `<button type="button" id="delbtn">삭제</button>`
            }
            const str = `
              <tr data-no="${res[i].no}">
                <td>${res[i].no}</td>
                <td>${res[i].bc_id}</td>
                <td>${res[i].bc_content}</td>
                <td>${res[i].bc_date}</td>
                <td>${update}</td>
                <td>${del}</td>
              </tr>`;
            divcomment.innerHTML += str;
          }
        });
      }

      // 댓글 등록
      function commentInsert(){
        saveBtn.addEventListener("click",()=>{
          let data = {
            bo_id,
            bc_id : bc_id.value,
            bc_content : bc_content.value,
          };
          fetch(url, {
            method : "POST",
            headers : {
              "content-type" : "application/json"
            },
            body : JSON.stringify(data),
          })
            .then((res) => res.json())
            .then((res) => {
              alert("댓글이 등록되었습니다");
              commentAll();
              inputDel();
            })
            .catch(()=>{
              alert("댓글 등록 실패!");
            });
        });
      }

      // 댓글 삭제
      function commentDelete(){
        divcomment.addEventListener("click",(event)=>{
          if(event.target.id == "delbtn"){
            //확인, 취소 여부를 사용자에게 알림창으로 물어보는 기능(confirm)
            if(confirm('댓글을 삭제하시겠습니까?')){
              let no = event.target.closest("tr").getAttribute("data-no");
              fetch(`${url}/${no}`, {method : "delete"})
              .then(() => commentAll());
            };
          };
        });
      }

      // 댓글 수정 버튼을 누르면 텍스트창으로 넘어가는 곳
      function commentUpdate(){
        divcomment.addEventListener("click",(event)=>{
          //텍스트 창으로 넘어가는 조건문
          if(event.target.id == "updatebtn"){
            let no = event.target.closest("tr").getAttribute("data-no");
            fetch(`${url}/${bo_id}`)
              .then((res) => res.json())
              .then((res) => {
                for( let i = 0 ; i < res.length ; i++){
                bc_content.value = res[i].bc_content;
                //console.log(res[]);
                }
              })
          }
          // else if(confirm('댓글을 수정하시겠습니까?')){
          //   let no = event.target.closest("tr").getAttribute("data-no");
          //   fetch(`${url}/${no}`,{
          //     method: "PUT",
          //     headers: {
          //       "content-type" : "aqqlication/json"
          //     },
          //       body : JSON.stringify(data),
          //   })
          //     .then((res) => res.json())
          //     .then((res) => {
          //       if(res.result == true){
          //         alert("수정완료");
          //         commentAll();
          //       } else {
          //         alert("수정실패");
          //       }
          //         })
          //     }
        });
      };

      function inputDel(){
        bc_content.value='';
      }
    </script>
  </body>
</html>